{"version":3,"file":"static/js/673.c0a0855c.chunk.js","mappings":"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","sources":["global/texts/texts-indicators-page.js","global/colors-hexadecimal.js","helpers/validations/validateIndicators.jsx","pages/simulation/steps/indicators.jsx"],"sourcesContent":["const INFORMATION_DESCRIPTION = 'Please upload the data associated to the development indicators that you wish to analyse. You should download the spreadsheet template and consult the \"metadata\" tab for an explanation on how each variable should be formatted. The app will run a quality check to make sure that the data are in the correct format. If you do not have data and only wish to experiment with the app, the template provides an \"example\" tab with synthetic data that you can copy and paste into the \"template\" tab.';\n\nconst TEMPLATE_DESCRIPTION = 'Download the spreadsheet template and fit the \"template\" tab with your data in development indicators.';\n\nexport const texts_indicators = {\n  INFORMATION_DESCRIPTION,\n  TEMPLATE_DESCRIPTION\n}\n","export const colors = ['#4839ba'\n,'#2e682c'\n,'#d2e0dd'\n,'#767ea0'\n,'#e23675'\n,'#68a892'\n,'#272f84'\n,'#a58657'\n,'#c99e91'\n,'#5e3724'\n,'#702b53'\n,'#845e60'\n,'#46b3b5'\n,'#1a3135'\n,'#000c06'\n,'#7c7460'\n,'#1ba32d'\n,'#369918'\n,'#201bb5'\n,'#3a2a33'\n,'#3e1244'\n,'#2d0e1b'\n,'#93147a'\n,'#938c60'\n,'#070507'\n,'#443887'\n,'#62db8e'\n,'#20281d'\n,'#0d1601'\n,'#404440'\n,'#d86f68'\n,'#a0c5ef'\n,'#3d6345'\n,'#141009'\n,'#b7ac9a'\n,'#20350c'\n,'#020102'\n,'#f2f9f8'\n,'#329e8f'\n,'#070203'\n,'#f8d6ff'\n,'#090f0d'\n,'#0fada5'\n,'#a5f455'\n,'#697019'\n,'#01442c'\n,'#d6ba40'\n,'#42380b'\n,'#5dccb0'\n,'#6b894d'\n,'#772920'\n,'#9b413b'\n,'#110405'\n,'#171456'\n,'#556046'\n,'#0c0f0f'\n,'#bf0f23'\n,'#2d3749'\n,'#237a4d'\n,'#ecfc9c'\n,'#0b004f'\n,'#4c064a'\n,'#0d2954'\n,'#186024'\n,'#1c1b15'\n,'#210630'\n,'#5a5b16'\n,'#49775a'\n,'#542541'\n,'#f570f9'\n,'#c0dbed'\n,'#e067d6'\n,'#f4dcee'\n,'#01363f'\n,'#242326'\n,'#f9ab86'\n,'#38ced8'\n,'#b73e58'\n,'#c61199'\n,'#77096c'\n,'#00db33'\n,'#1b443f'\n,'#24a58e'\n,'#019343'\n,'#86baaf'\n,'#0b1616'\n,'#11110a'\n,'#0c1c02'\n,'#3e4736'\n,'#607063'\n,'#cdd6cf'\n,'#205908'\n,'#77ad2d'\n,'#48725c'\n,'#020201'\n,'#000000'\n,'#3b3f1e'\n,'#707070'\n,'#080a09'\n,'#476310'\n,'#141613'\n,'#bbef62'\n,'#d7e2e1'\n,'#052d11'\n,'#090c08'\n,'#5c9155'\n,'#587760'\n,'#49c629'\n,'#27594d'\n,'#4cf782'\n,'#02230b'\n,'#2b3f3d'\n,'#444444'\n,'#2fc6a8'\n,'#a2e840'\n,'#97db7d'\n,'#2f490e'\n,'#13a37a'\n,'#c9dbca'\n]\n","import * as XLSX from 'xlsx';\nimport { getBase64 } from '../file-helper';\nimport { colors } from '../../global/colors-hexadecimal.js';\n\nconst sheetConfig = {\n  sheet:{\n    type: '',\n    dimension: '',\n    value: '',\n  },\n  indicator_label: {\n    columnRegex: new RegExp(\"^A\"),\n    columnStart: \"A1\"\n  },\n  initial_value: {\n    columnRegex: new RegExp(\"^B\"),\n    columnStart: \"B1\"\n  },\n  final_value: {\n    columnRegex: new RegExp(\"^C\"),\n    columnStart: \"C1\"\n  },\n  alpha: {\n    columnRegex: new RegExp(\"^D\"),\n    columnStart: \"D1\"\n  },\n  alpha_prime: {\n    columnRegex: new RegExp(\"^E\"),\n    columnStart: \"E1\"\n  },\n  beta: {\n    columnRegex: new RegExp(\"^F\"),\n    columnStart: \"F1\"\n  },\n  success_rates: {\n    columnRegex: new RegExp(\"^G\"),\n    columnStart: \"G1\"\n  },\n  instrumental: {\n    columnRegex: new RegExp(\"^H\"),\n    columnStart: \"H1\"\n  },\n  monitoring: {\n    columnRegex: new RegExp(\"^I\"),\n    columnStart: \"I1\"\n  },\n  rule_of_law: {\n    columnRegex: new RegExp(\"^J\"),\n    columnStart: \"J1\"\n  },\n  min_value: {\n    columnRegex: new RegExp(\"^K\"),\n    columnStart: \"K1\"\n  },\n  max_value: {\n    columnRegex: new RegExp(\"^L\"),\n    columnStart: \"L1\"\n  },\n  indicator_name: {\n    columnRegex: new RegExp(\"^M\"),\n    columnStart: \"M1\"\n  },\n  indicator_color: {\n    columnRegex: new RegExp(\"^N\"),\n    columnStart: \"N1\"\n  },\n}\n\nconst validateIndicators = async (format, f, indicator_sheet = 'template') => {\n  let error = false;\n  const errors = new Set();\n\n  const generate_indicator_color = (length) => {\n    if (length > colors.length) {\n      var remainder = length - colors.length\n      color = colors.slice(0,remainder);\n      while (remainder >= 0) {\n        color = color.concat(colors.slice(0,remainder));\n        remainder -= colors.length;\n      }\n    } else {\n      color = colors.slice(0,length);\n    }\n  }\n\n  const isLeftValueLowerThanRight = (a, b) =>\n    a.length === b.length &&\n    a.every((v, i) => v < b[i]);\n\n  const anyValueEqual = (a, b) =>\n    a.length === b.length &&\n    a.some((v, i) => v === b[i]);\n\n  const isNumber = (column) => column['t'] === 'n';\n  const isPositive = (value) => value['v'] >= 0;\n  const isBetweenZeroAndOne = (value) => value['v'] >= 0 && value['v'] <= 1;\n  const isOneOrZero = (value) => value['v'] === 0 || value['v'] === 1;\n  const isColor = (value) => /^#[0-9A-F]{6}$/i.test(value['v'])\n\n  const addError = (variable, cell, type) => {\n    if (type === 'type') {\n      errors.add(`All values should be numeric - ${variable} ${cell}`);\n    } else if (type === 'dimension') {\n      errors.add(`The number of values should be the same as the number of values in column ${variable}`);\n    } else if (type === 'R') {\n      errors.add('At least one value must be > 0');\n    } else if (type === 'value') {\n      errors.add(`Each value should not contain more than 12 characters - ${cell}`);\n    } else if (type === 'unique') {\n      errors.add(`${variable} should all be unique values`);\n    } else if (type === 'empty') {\n      errors.add(`The uploaded file structure does not meet the template format or is empty - ${variable}`);\n    } else if (type === 'wrong_sheet') {\n      errors.add(`The file uploaded do not contain a sheet with the name: ${indicator_sheet} `);\n    } else if (type === 'success_rates') {\n      errors.add(`You must have values in alpha, alpha_prime and beta if ${variable} is empty`);\n    } else if (type === 'color') {\n      errors.add('Color values must be proper hex values');\n    } else if (type === 'higher') {\n      errors.add(`${variable} has a higher value than ${cell}`);\n    } else if (type === 'lower') {\n      errors.add(`${variable} has a lower value than ${cell}`);\n    } else if (type === 'identical') {\n      errors.add(`Values of ${variable} cannot be the same as ${cell}`);\n    } else {\n      errors.add(`All values should be between 0 and 1 - ${variable}`);\n    }\n    error = true;\n  };\n\n  if (format !== 'xlsx' && format !== 'xls') {\n    throw new Error(\"Wrong format file\");\n  } else {\n    const f64 = await getBase64(f);\n    const file = XLSX.read(f64, { type: 'base64' });\n    var I0 = [];\n    var IF = [];\n    var alpha = [];\n    var alpha_prime = [];\n    var beta = [];\n    var success_rates = [];\n    var R = [];\n    var qm = [];\n    var rl = [];\n    var Imax = [];\n    var Imin = [];\n    var G = [];\n    var ID = [];\n    var name = [];\n    var color = [];\n\n    // Verify if exists NaN values\n    const indicators = file.Sheets[indicator_sheet];\n    if (!indicators || indicators.length === 0) {\n      addError('sheet', null, 'wrong_sheet');\n    } else {\n      Object.keys(indicators).map((k) => {\n        if (sheetConfig.indicator_label.columnRegex.test(k) && k !== sheetConfig.indicator_label.columnStart) {\n          if (indicators[k]['t'] === 's') {\n            if (indicators[k]['v'].length > 12) {\n              addError('indicator_label', k, 'value');\n            } else {\n              ID.push(indicators[k]['v']);\n            }\n          } else {\n            addError('indicator_label', k, 'type');\n          }\n        }\n\n        if (sheetConfig.initial_value.columnRegex.test(k) && k !== sheetConfig.initial_value.columnStart) {\n          isNumber(indicators[k]) && isPositive(indicators[k]) ? I0.push(indicators[k]['v']) : addError('initial_value', k, 'type');\n        }\n\n        if (sheetConfig.final_value.columnRegex.test(k) && k !== sheetConfig.final_value.columnStart) {\n          isNumber(indicators[k]) && isPositive(indicators[k]) ? IF.push(indicators[k]['v']) : addError('final_value', k, 'type');\n        }\n\n        if (sheetConfig.alpha.columnRegex.test(k) && k !== sheetConfig.alpha.columnStart) {\n          isNumber(indicators[k]) && isPositive(indicators[k]) ? alpha.push(indicators[k]['v']) : addError('alpha', k, 'type');\n        }\n\n        if (sheetConfig.alpha_prime.columnRegex.test(k) && k !== sheetConfig.alpha_prime.columnStart) {\n          isNumber(indicators[k]) && isPositive(indicators[k]) ? alpha_prime.push(indicators[k]['v']) : addError('alpha_prime', k, 'type');\n        }\n\n        if (sheetConfig.beta.columnRegex.test(k) && k !== sheetConfig.beta.columnStart) {\n          isNumber(indicators[k]) && isPositive(indicators[k]) ? beta.push(indicators[k]['v']) : addError('beta', k, 'type');\n        }\n\n        if (sheetConfig.success_rates.columnRegex.test(k) && k !== sheetConfig.success_rates.columnStart) {\n          if (isNumber(indicators[k]) && isBetweenZeroAndOne(indicators[k])) {\n            success_rates.push(indicators[k]['v'])\n          } else {\n            addError('success_rates', k, 'type');\n          }\n        }\n\n        if (sheetConfig.instrumental.columnRegex.test(k) && k !== sheetConfig.instrumental.columnStart) {\n          if (isNumber(indicators[k]) && isOneOrZero(indicators[k])) {\n            R.push(indicators[k]['v']);\n          } else {\n            addError('instrumental', k, 'type');\n          }\n        }\n\n        if (sheetConfig.monitoring.columnRegex.test(k) && k !== sheetConfig.monitoring.columnStart) {\n          if (isNumber(indicators[k]) && isBetweenZeroAndOne(indicators[k])) {\n            qm.push(indicators[k]['v']);\n          } else {\n            addError('monitoring', k, 'type');\n          }\n        }\n\n        if (sheetConfig.rule_of_law.columnRegex.test(k) && k !== sheetConfig.rule_of_law.columnStart) {\n          if (isNumber(indicators[k]) && isBetweenZeroAndOne(indicators[k])) {\n            rl.push(indicators[k]['v']);\n          } else {\n            addError('rule_of_law', k, 'type');\n          }\n        }\n\n        if (sheetConfig.min_value.columnRegex.test(k) && k !== sheetConfig.min_value.columnStart) {\n          isNumber(indicators[k]) && isPositive(indicators[k]) ? Imin.push(indicators[k]['v']) : addError('min_value', k, 'type');\n        }\n\n        if (sheetConfig.max_value.columnRegex.test(k) && k !== sheetConfig.max_value.columnStart) {\n          isNumber(indicators[k]) && isPositive(indicators[k]) ? Imax.push(indicators[k]['v']) : addError('max_value', k, 'type');\n        }\n\n        if (sheetConfig.indicator_name.columnRegex.test(k) && k !== sheetConfig.indicator_name.columnStart) {\n          name.push(indicators[k]['v'])\n        }\n\n        if (sheetConfig.indicator_color.columnRegex.test(k) && k !== sheetConfig.indicator_color.columnStart) {\n          isColor(indicators[k]) ? color.push(indicators[k]['v']) : addError('color', k, 'color');\n        }\n      })\n\n      if (ID.length === 0) {\n        addError('indicator_label', null, 'empty')\n      }\n\n      if (new Set(ID).size !== ID.length) {\n        addError('indicator_label', null, 'unique')\n      }\n\n      if (I0.length === 0) {\n        addError('initial_value', null, 'empty');\n      } else {\n        // Verify the dimensions of arrays\n        if (I0.length !== qm.length && qm.length !== 0) {\n          addError('monitoring', null, 'dimension');\n        }\n\n        if (!success_rates.length && !(alpha.length && alpha_prime.length && beta.length)) {\n          addError('success_rates', null, 'success_rates');\n        }\n\n        if (I0.length !== alpha.length && alpha.length > 0) {\n          addError('alpha', null, 'dimension');\n        }\n        if (I0.length !== alpha_prime.length && alpha_prime.length > 0) {\n          addError('alpha_prime', null, 'dimension');\n        }\n        if (I0.length !== beta.length && beta.length > 0) {\n          addError('beta', null, 'dimension');\n        }\n        if (I0.length !== R.length) {\n          addError('instrumental', null, 'dimension');\n        }\n\n        if (I0.length !== rl.length && rl.length !== 0) {\n          addError('rule_of_law', null, 'dimension');\n        }\n\n        if (I0.length !== Imax.length && Imax.length > 0) {\n          addError('max_value', null, 'dimension');\n        }\n\n        if (I0.length !== Imin.length && Imin.length > 0) {\n          addError('min_value', null, 'dimension');\n        }\n\n        if (!isLeftValueLowerThanRight(Imin, I0) && Imin.length > 0) {\n          addError('min_value', 'initial_value', 'higher');\n        }\n\n        if (!isLeftValueLowerThanRight(Imin, IF) && Imin.length > 0) {\n          addError('min_value', 'final_value', 'higher');\n        }\n\n        if (!isLeftValueLowerThanRight(I0, Imax)) {\n          addError('max_value', 'initial_value', 'lower');\n        }\n\n        if (!isLeftValueLowerThanRight(IF, Imax)) {\n          addError('max_value', 'final_value', 'lower');\n        }\n\n        if (anyValueEqual(I0, IF)) {\n          addError('initial_value', 'final_value', 'identical');\n        }\n      }\n      // eslint-disable-next-line no-undef\n      if (!(nj.sum(R) > 0)) {\n        addError('instrumental', null, 'zero');\n      }\n    }\n  }\n  if (!error) {\n    if(color.length === 0) generate_indicator_color(I0.length);\n    if (qm.length === 0) qm = Array.from({ length: I0.length }, () => 0.5);\n    if (rl.length === 0) rl = Array.from({ length: I0.length }, () => 0.5);\n    return { I0, IF, alpha, alpha_prime, beta, success_rates, R, qm, rl, Imax, Imin, G, ID, color, name }\n  } else {\n    return { error: true, errors };\n  }\n}\n\nexport { validateIndicators };\n","import React from 'react';\nimport { Box, Button, Container, Grid, Typography } from '@mui/material';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport indicatorsTemplate from '../../../assets/templates/template_indicators.xlsx';\nimport { texts_indicators as texts } from '../../../global/texts/texts-indicators-page.js'\nimport { CustomBreadcrumbs } from '../breadcrumbs';\nimport { MediaUploader } from '../../../common/media-uploader/media-uploader';\nimport { FileValidation } from './validations/fileValidation';\nimport { validateIndicators } from '../../../helpers/validations/validateIndicators';\nimport { getFileExtention } from '../../../helpers/file-helper';\nimport { SiteTitle } from '../../../components/SiteTitle';\n\nconst Indicators = (props) => {\n  const { nextStep, indicatorsFile, setIndicatorsFile , simulationState, setIndicatorsResult} = props;\n  const [verified, setVerified] = React.useState(false);\n  const [validationResult, setValidationResult] = React.useState(null);\n\n  const uploadFile = async (file) => {\n    if (file && file.name) {\n      const extention = getFileExtention(file);\n      const fileValidation = await validateIndicators(extention, file);\n      setIndicatorsFile(file);\n      if (\n        !fileValidation.error\n      ) {\n        setVerified(true);\n        setValidationResult(fileValidation);\n        setIndicatorsResult(fileValidation);\n      } else {\n        setVerified(false);\n        setValidationResult(fileValidation);\n      }\n    } else {\n      setIndicatorsFile([]);\n      setVerified(false);\n      setValidationResult(null);\n    }\n  }\n\n  React.useEffect(() => {\n    const script = document.createElement('script');\n    script.src = \"/numjs.min.js\";\n    script.async = true;\n    document.body.appendChild(script);\n    return () => {\n      document.body.removeChild(script);\n    }\n  }, []);\n\n  return (\n    <Container\n      maxWidth=\"xl\"\n      sx={{\n        paddingY: (theme) => [ theme.spacing(4), theme.spacing(4), theme.spacing(8) ]\n      }}\n    >\n      <Grid container rowSpacing={4} columnSpacing={8} columnns={{ xs: 4, sm: 8, md: 12, lg: 12 }}>\n        <Grid item xs={12} md={5}>\n          <SiteTitle />\n        </Grid>\n        <Grid item xs={12} md={7}>\n          <CustomBreadcrumbs selected={simulationState} />\n        </Grid>\n        <Grid item xs={12} md={5}>\n          <Typography variant='h1'>\n            Indicators\n          </Typography>\n          <Typography variant='body1' mt={4}>\n            { texts.INFORMATION_DESCRIPTION }\n          </Typography>\n          <Typography variant='body1' mt={4} mb={2}>\n            { texts.TEMPLATE_DESCRIPTION }\n          </Typography>\n          <Button variant='outlined' href={indicatorsTemplate}>\n            Download template\n          </Button>\n        </Grid>\n        <Grid item xs={12} md={7}>\n          <MediaUploader\n            maxFiles={1}\n            previewsPerLine={1}\n            supportedExtensions={['xlsx', 'xls']}\n            onFileSelection={(files) => {\n              if (files) {\n                uploadFile(files[0]);\n              } else {\n                uploadFile([]);\n              }\n            }}\n          />\n          {indicatorsFile\n          && validationResult\n          && indicatorsFile.name\n          && (\n            <FileValidation component=\"indicator\" verified={verified} validationResult={validationResult} />\n          )}\n          <Box mt={4} textAlign=\"right\">\n            <Button\n              variant='contained'\n              size='large'\n              onClick={() => nextStep()}\n              disabled={!verified}\n              endIcon={<NavigateNextIcon />}\n            >\n              Next\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nexport { Indicators };\n\nexport default Indicators;\n"],"names":["texts_indicators","colors","sheetConfig","sheet","type","dimension","value","indicator_label","columnRegex","RegExp","columnStart","initial_value","final_value","alpha","alpha_prime","beta","success_rates","instrumental","monitoring","rule_of_law","min_value","max_value","indicator_name","indicator_color","validateIndicators","format","f","indicator_sheet","error","errors","Set","generate_indicator_color","length","remainder","color","slice","concat","isLeftValueLowerThanRight","a","b","every","v","i","anyValueEqual","some","isNumber","column","isPositive","isBetweenZeroAndOne","isOneOrZero","isColor","test","addError","variable","cell","add","Error","getBase64","f64","file","XLSX","I0","IF","R","qm","rl","Imax","Imin","G","ID","name","indicators","Sheets","Object","keys","map","k","push","size","nj","sum","Array","from","Indicators","props","nextStep","indicatorsFile","setIndicatorsFile","simulationState","setIndicatorsResult","React","verified","setVerified","validationResult","setValidationResult","uploadFile","extention","getFileExtention","fileValidation","script","document","createElement","src","async","body","appendChild","removeChild","Container","maxWidth","sx","paddingY","theme","spacing","Grid","container","rowSpacing","columnSpacing","columnns","xs","sm","md","lg","item","SiteTitle","selected","Typography","variant","mt","texts","mb","Button","href","indicatorsTemplate","maxFiles","previewsPerLine","supportedExtensions","onFileSelection","files","component","Box","textAlign","onClick","disabled","endIcon","NavigateNext"],"sourceRoot":""}